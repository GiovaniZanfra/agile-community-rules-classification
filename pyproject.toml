[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "agile_community_rules_classification"
version = "0.0.1"
description = "This project builds a binary classifier that, given a Reddit comment and available context (subreddit, parent, metadata), outputs a calibrated probability that the comment violated a specific subreddit rule using a large corpus of moderated comments plus a small labeled dev set; the emphasis is on capturing community-specific norms (not censoring speech), preserving raw data immutability, evaluating with column-averaged AUC, analyzing calibration and subgroup failure modes, and delivering probabilistic predictions, clear error analysis, and practical integration guidance for moderators while enforcing strict privacy/ethics rules (redaction, no sharing of PII, human-in-the-loop decisions)."
authors = [
  { name = "Giovani Zanfra Brand\u00e3o" },
]

readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    
]
requires-python = ">=3.10"


[tool.ruff]
line-length = 99
src = ["agile_community_rules_classification"]
include = ["pyproject.toml", "agile_community_rules_classification/**/*.py"]

[tool.ruff.lint]
extend-select = ["I"]  # Add import sorting

[tool.ruff.lint.isort]
known-first-party = ["agile_community_rules_classification"]
force-sort-within-sections = true

